<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UtilityControl.Control">
    
    <!--UButton模板-->
    <ControlTemplate x:Key="UButton_Template" TargetType="{x:Type local:UButton}">
        <Border x:Name="border" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                                    Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">
            <!--Icon/Text-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" 
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <TextBlock x:Name="icon"  Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=UIconMargin}" 
                           RenderTransformOrigin="0.5,0.5" Style="{DynamicResource UIcon}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= UIcon}"
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= UIconSize}" 
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="transIcon" Angle="0"/>
                    </TextBlock.RenderTransform>
                </TextBlock>

                <TextBlock VerticalAlignment="Center"  x:Name="txt" 
                           TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentDecorations}" 
                                               Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                                               FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}" 
                                               Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
            </StackPanel>
        </Border>
        <!--触发器-->
        <ControlTemplate.Triggers>
            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="icon"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="txt"/>
                <Setter Property="BorderThickness" Value="0" TargetName="border" />
            </Trigger>
            <!--UIcon的动画触发器-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"></Condition>
                    <Condition Property="AllowsAnimation" Value="true"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <!--鼠标按下时的前景、背景样式-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedForeground}" TargetName="icon"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=PressedForeground}" TargetName="txt"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" TargetName="border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultUButtonStyle" TargetType="{x:Type local:UButton}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="MouseOverBackground" Value="{DynamicResource ButtonMouseOverBackground}" />
        <Setter Property="MouseOverForeground" Value="{DynamicResource ButtonMouseOverForeground}" />
        <Setter Property="PressedBackground" Value="{DynamicResource ButtonPressedBackground}" />
        <Setter Property="PressedForeground" Value="{DynamicResource ButtonPressedForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="UIconSize" Value="{DynamicResource IconFontSize}" />
        <Setter Property="Template" Value="{StaticResource UButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Margin" Value="10,5"></Setter>
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="UIcon" Value=""></Setter>
        <Setter Property="UIconMargin" Value="0,0,5,0" />
        <Setter Property="AllowsAnimation" Value="False" />
    </Style>
    
    <!--背景透明的UButton样式-->
    <Style x:Key="UButton_Transparency" TargetType="{x:Type local:UButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}" />
        <Setter Property="MouseOverForeground" Value="{DynamicResource MouseOverForeground}" />
        <Setter Property="PressedForeground" Value="{DynamicResource PressedForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="UIconSize" Value="{DynamicResource IconFontSize}" />
        <Setter Property="Template" Value="{StaticResource UButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="UIconMargin" Value="0,0,2,0" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <!--LinkButton的UButton样式，默认无UIcon-->
    <Style x:Key="UButton_LinkButton" TargetType="{x:Type local:UButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource LinkForeground}" />
        <Setter Property="MouseOverForeground" Value="{DynamicResource MouseOverForeground}" />
        <Setter Property="PressedForeground" Value="{DynamicResource PressedForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="UIconSize" Value="{DynamicResource IconFontSize}" />
        <Setter Property="Template" Value="{StaticResource UButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="UIconMargin" Value="0" />
        <Setter Property="UIcon" Value="" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="ContentDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="LoginUButton" TargetType="{x:Type local:UButton}" >
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="Width" Value="350"></Setter>
        <Setter Property="FontSize" Value="25"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="15"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Background" Value="#FF3600" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="MouseOverBackground" Value="Red" />
        <Setter Property="MouseOverForeground" Value="#FFFFFF" />
        <Setter Property="PressedBackground" Value="Red" />
        <Setter Property="PressedForeground" Value="#FFFFFF" />
        <Setter Property="Template" Value="{StaticResource UButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="UIcon" Value=""></Setter>
        <Setter Property="AllowsAnimation" Value="False" />
    </Style>

    <Style x:Key="MessageBoxUButton" TargetType="{x:Type local:UButton}">
        <Setter Property="MinHeight" Value="25"></Setter>
        <Setter Property="MinWidth" Value="80"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,4"></Setter>
        <Setter Property="CornerRadius" Value="2"></Setter>
        <Setter Property="Background" Value="#CD373C5C" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="MouseOverBackground" Value="#FF852B" />
        <Setter Property="MouseOverForeground" Value="#FFFFFF" />
        <Setter Property="PressedBackground" Value="#FF852B" />
        <Setter Property="PressedForeground" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="#FF852B"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template" Value="{StaticResource UButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="UIcon" Value=""></Setter>
        <Setter Property="AllowsAnimation" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="#373C5C"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--默认样式-->
    <Style TargetType="{x:Type local:UButton}" BasedOn="{StaticResource DefaultUButtonStyle}"/>


</ResourceDictionary>
