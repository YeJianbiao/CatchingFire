<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:UtilityControl.Control"
                    xmlns:convert="clr-namespace:UtilityControl.Convert"
                    xmlns:model="clr-namespace:UtilityControl.Model">
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="10"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle Width="1" Fill="{TemplateBinding Background}" HorizontalAlignment="Center">
                            
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="GridViewColumnHeader">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="10,0"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="MinHeight" Value="28"></Setter>
        <Setter Property="MinWidth" Value="50"></Setter>
        <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid>
                        <Border x:Name="HeaderBorder" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" MinWidth="{TemplateBinding MinWidth}" Margin="0,0,-2,0">
                            <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"></ContentPresenter>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-5,0" Style="{StaticResource GridViewColumnHeaderGripper}"></Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HeaderContent" Property="Margin" Value="6 1 6 1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontWeight="SemiBold" Text="{Binding}"></TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas x:Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"></Rectangle>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="DefaultUTreeListVieweItem" TargetType="{x:Type control:UTreeListViewItem}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid MinHeight="28" Background="Transparent">
                <Border x:Name="Border" Background="Transparent" BorderThickness="0" BorderBrush="Gainsboro" VerticalAlignment="Stretch">
                    <StackPanel Orientation="Horizontal">
                        <GridViewRowPresenter x:Name="Presenter" Content="{TemplateBinding Header}" Columns="{Binding Columns,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=control:UTreeListView}}" VerticalAlignment="Center"></GridViewRowPresenter>
                        
                        <GridViewRowPresenter x:Name="OPresenter" Content="{TemplateBinding Header}" Columns="{Binding OperationColumns,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=control:UTreeListView}}" VerticalAlignment="Center" Visibility="Collapsed"></GridViewRowPresenter>
                    </StackPanel>
                </Border>
            </Grid>
            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1" Background="Gainsboro"></GridSplitter>
            <ItemsPresenter Grid.Row="2" x:Name="ItemsPresenter" Visibility="Collapsed"></ItemsPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ItemsPresenter" Property="Visibility" Value="Visible"></Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#ff8835"></Setter>
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="White" ></Setter>
            </Trigger>
            <Trigger Property="IsEdit" Value="True">
                <Setter TargetName="Presenter" Property="Columns" Value="{Binding EditColumns,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=control:UTreeListView}}"></Setter>
                <Setter TargetName="OPresenter" Property="Columns" Value="{Binding EditOperationColumns,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type control:UTreeListView}}}"></Setter>
                <Setter TargetName="OPresenter" Property="Visibility" Value="Visible"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="Border">
                <Setter TargetName="OPresenter" Property="Visibility" Value="Visible"></Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"></Condition>
                    <Condition Property="IsSelectionActive" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Border" Property="Background" Value="#ff8835"></Setter>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"></Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="TreeListViewExpander" TargetType="{x:Type ToggleButton}">
        <Border>
            <TextBlock x:Name="ExpanderIcon" Foreground="{TemplateBinding Foreground}" Text="&#xe625;" Style="{DynamicResource UIcon}" FontSize="10" Margin="0,0,10,0"></TextBlock>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding HasItems,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=control:UTreeListViewItem}}" Value="False">
                <Setter TargetName="ExpanderIcon" Property="Visibility" Value="Hidden"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsExpanded,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type control:UTreeListViewItem}}}" Value="True">
                <Setter TargetName="ExpanderIcon" Property="Text" Value="&#xe624;"></Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="DefaultUTreeListViewItemStyle" TargetType="{x:Type control:UTreeListViewItem}">
        <Setter Property="IsExpanded" Value="True"></Setter>
        <Setter Property="Template" Value="{StaticResource DefaultUTreeListVieweItem}"></Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="ItemNode" DataType="{x:Type model:TreeNode}" ItemsSource="{Binding Nodes}"></HierarchicalDataTemplate>
    
    <Style x:Key="DefaultUTreeListView" TargetType="{x:Type control:UTreeListView}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="Gainsboro"></Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultUTreeListViewItemStyle}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:UTreeListView}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template" Value="{StaticResource TreeListViewExpander}"></Setter>
                            <Setter Property="Margin" Value="{Binding Converter={x:Static convert:XConverter.TreeViewItemMarginLeftConverter},RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type control:UTreeListViewItem}},ConverterParameter='15'}"></Setter>
                            <Setter Property="IsChecked" Value="{Binding IsExpanded,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type control:UTreeListViewItem}}}"></Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <GridViewHeaderRowPresenter Columns="{TemplateBinding Columns}" AllowsColumnReorder="{TemplateBinding AllowsColumnReorder}"></GridViewHeaderRowPresenter>
                                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter></ItemsPresenter>
                                </ScrollViewer>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style TargetType="{x:Type control:UTreeListView}" BasedOn="{StaticResource DefaultUTreeListView}"></Style>
    
</ResourceDictionary>